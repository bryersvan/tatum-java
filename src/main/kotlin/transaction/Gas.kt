package transaction

enum class Gas(
    val value: Long,
    val description: String,
) {
    GZERO(0, "Nothing paid for operations of the set Wzero."),
    GBASE(2, "Amount of gas to pay for operations of the set Wbase."),
    GVERYLOW(3, "Amount of gas to pay for operations of the set Wverylow."),
    GLOW(5, "Amount of gas to pay for operations of the set Wlow."),
    GMID(8, "Amount of gas to pay for operations of the set Wmid."),
    GHIGH(10, "Amount of gas to pay for operations of the set Whigh."),
    GEXTCODE(700, "Amount of gas to pay for an EXTCODESIZE operation."),
    GEXTCODEHASH(400, "Amount of gas to pay for an EXTCODEHASH operation."),
    GBALANCE(400, "Amount of gas to pay for a BALANCE operation."),
    GSLOAD(200, "Paid for a SLOAD operation."),
    GJUMPDEST(1, "Paid for a JUMPDEST operation."),
    GSSET(20000, "Paid for an SSTORE operation when the storage value is set to non-zero from zero."),
    GSRESET(5000, "Paid for an SSTORE operation when the storage value’s zeroness remains unchanged or is set to zero."),
    RSCLEAR(15000, "Refund given (added into refund counter) when the storage value is set to zero from non-zero."),
    RSELFDESTRUCT(24000, "Refund given (added into refund counter) for self-destructing an account."),
    GSELFDESTRUCT(5000, "Amount of gas to pay for a SELFDESTRUCT operation."),
    GCREATE(32000, "Paid for a CREATE operation."),
    GCODEDEPOSIT(200, "Paid per byte for a CREATE operation to succeed in placing code into state."),
    GCALL(700, "Paid for a CALL operation."),
    GCALLVALUE(9000, "Paid for a non-zero value transfer as part of the CALL operation."),
    GCALLSTIPEND(2300, "A stipend for the called contract subtracted from Gcallvalue for a non-zero value transfer."),
    GNEWACCOUNT(25000, "Paid for a CALL or SELFDESTRUCT operation which creates an account."),
    GEXP(10, "Partial payment for an EXP operation."),
    GEXPBYTE(50, "Partial payment when multiplied by dlog256(exponent)e for the EXP operation."),
    GMEMORY(3, "Paid for every additional word when expanding memory."),
    GTXCREATE(32000, "Paid by all contract-creating transactions after the Homestead transition."),
    GTXDATAZERO(4, "Paid for every zero byte of data or code for a transaction."),
    GTXDATANONZERO(68, "Paid for every non-zero byte of data or code for a transaction."),
    GTRANSACTION(21000, "Paid for every transaction."),
    GLOG(375, "Partial payment for a LOG operation."),
    GLOGDATA(8, "Paid for each byte in a LOG operation’s data."),
    GLOGTOPIC(375, "Paid for each topic of a LOG operation."),
    GSHA3(30, "Paid for each SHA3 operation."),
    GSHA3WORD(6, "Paid for each word (rounded up) for input data to a SHA3 operation."),
    GCOPY(3, "Partial payment for *COPY operations, multiplied by words copied, rounded up."),
    GBLOCKHASH(20, "Payment for BLOCKHASH operation."),
    GQUADDIVISOR(20, "The quadratic coefficient of the input sizes of the exponentiation-over-modulo precompiled contract."),
}